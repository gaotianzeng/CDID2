apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 106
        versionName "1.0.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a','x86','arm64-v8a','x86_64','armeabi'
        }
        consumerProguardFiles "proguard-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        //build release 版本 时 开启lint 检测
        checkReleaseBuilds true
        //lint 遇到 error 时继续 构建
        abortOnError false

    }

    task makeJar(type: Copy) {
        delete 'build/libs/cdid_android1.0.5.jar'
        from('build/intermediates/packaged-classes/release/')
        into('build/libs/')
        include('classes.jar')
        rename('classes.jar', 'cdid_android1.0.5.jar')
    }
    makeJar.dependsOn(build)

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation files('libs/miit_mdid_1.0.10.aar')
}
apply plugin: 'maven'
ext {
    // 从Github上clone下来的项目的本地地址
    GITHUB_REPO_PATH = "D:\\ictrProject\\CDID2"       //这里指定的就是刚刚新建项目后clone下来的在本地的路径
    PUBLISH_GROUP_ID = 'com.ictr'
    PUBLISH_ARTIFACT_ID = 'cdid_android'
    PUBLISH_VERSION = '1.1.2'
}
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}

